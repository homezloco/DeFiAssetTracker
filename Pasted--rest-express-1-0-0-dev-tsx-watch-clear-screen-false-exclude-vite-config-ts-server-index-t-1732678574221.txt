> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

bigint: Failed to load bindings, pure JS will be used (try npm run rebuild?)
03:34:26 AM [express] serving on port 5000

 ERROR(TypeScript)  Namespace 'global.Express' has no exported member 'NextFunction'.
 FILE  /home/runner/DeFiAssetTracker/server/auth.ts:38:96

    36 |
    37 | // Middleware to ensure user is authenticated
  > 38 | export function ensureAuthenticated(req: Express.Request, res: Express.Response, next: Express.NextFunction) {
       |                                                                                                ^^^^^^^^^^^^
    39 |   if (req.isAuthenticated()) {
    40 |     return next();
    41 |   }

 ERROR(TypeScript)  Property 'status' does not exist on type 'Response'.
 FILE  /home/runner/DeFiAssetTracker/server/auth.ts:42:7

    40 |     return next();
    41 |   }
  > 42 |   res.status(401).send("Authentication required");
       |       ^^^^^^
    43 | }
    44 | export function setupAuth(app: Express) {
    45 |   const MemoryStore = createMemoryStore(session);

 ERROR(TypeScript)  Module '"node:util"' has no exported member 'PromiseSettledResult'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:10:15

     8 | import { TOKEN_PROGRAM_ID } from "@solana/spl-token";
     9 | import { z } from "zod";
  > 10 | import { type PromiseSettledResult } from "node:util";
       |               ^^^^^^^^^^^^^^^^^^^^
    11 | import retry from "async-retry";
    12 |
    13 | const TokenBalance = z.object({

 ERROR(TypeScript)  Property 'JsonRpcProvider' does not exist on type 'typeof import("/home/runner/DeFiAssetTracker/node_modules/ethers/lib/ethers")'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:31:37

    29 |     async () => {
    30 |       try {
  > 31 |         const provider = new ethers.JsonRpcProvider(
       |                                     ^^^^^^^^^^^^^^^
    32 |           'https://eth-mainnet.g.alchemy.com/v2/demo'
    33 |         );
    34 |         const balance = await provider.getBalance(address);

 ERROR(TypeScript)  Property 'formatUnits' does not exist on type 'typeof import("/home/runner/DeFiAssetTracker/node_modules/ethers/lib/ethers")'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:53:31

    51 |             return {
    52 |               symbol: token.symbol,
  > 53 |               balance: ethers.formatUnits(tokenBalance, 'ether')
       |                               ^^^^^^^^^^^
    54 |             };
    55 |           })
    56 |         ) as PromiseSettledResult<TokenBalance>[];

 ERROR(TypeScript)  'TokenBalance' refers to a value, but is being used as a type here. Did you mean 'typeof TokenBalance'?
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:56:35

    54 |             };
    55 |           })
  > 56 |         ) as PromiseSettledResult<TokenBalance>[];
       |                                   ^^^^^^^^^^^^
    57 |
    58 |         const validTokenBalances = tokenBalances
    59 |           .filter((result): result is PromiseFulfilledResult<{ symbol: string; balance: string }> => 

 ERROR(TypeScript)  Property 'formatUnits' does not exist on type 'typeof import("/home/runner/DeFiAssetTracker/node_modules/ethers/lib/ethers")'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:67:27

    65 |           address,
    66 |           chain: 'ethereum',
  > 67 |           balance: ethers.formatUnits(balance, 'ether'),
       |                           ^^^^^^^^^^^
    68 |           tokenBalances: validTokenBalances
    69 |         };
    70 |       } catch (error) {

 ERROR(TypeScript)  Property 'map' does not exist on type 'never'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:182:27

    180 |       // Fetch balances for each wallet with proper error handling
    181 |       const walletsWithBalances = await Promise.allSettled(
  > 182 |         portfolio.wallets.map(async (wallet) => {
        |                           ^^^
    183 |           try {
    184 |             return await getWalletBalance(wallet.address, wallet.chain);
    185 |           } catch (error) {

 ERROR(TypeScript)  Parameter 'wallet' implicitly has an 'any' type.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:182:38

    180 |       // Fetch balances for each wallet with proper error handling
    181 |       const walletsWithBalances = await Promise.allSettled(
  > 182 |         portfolio.wallets.map(async (wallet) => {
        |                                      ^^^^^^
    183 |           try {
    184 |             return await getWalletBalance(wallet.address, wallet.chain);
    185 |           } catch (error) {

 ERROR(TypeScript)  Parameter 'result' implicitly has an 'any' type.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:196:57

    194 |       );
    195 |
  > 196 |       const processedWallets = walletsWithBalances.map((result, index) => {
        |                                                         ^^^^^^
    197 |         if (result.status === 'fulfilled') {
    198 |           return result.value;
    199 |         }

 ERROR(TypeScript)  Parameter 'index' implicitly has an 'any' type.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:196:65

    194 |       );
    195 |
  > 196 |       const processedWallets = walletsWithBalances.map((result, index) => {
        |                                                                 ^^^^^
    197 |         if (result.status === 'fulfilled') {
    198 |           return result.value;
    199 |         }

 ERROR(TypeScript)  Property 'address' does not exist on type 'never'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:202:45

    200 |         // Return wallet with error state if balance fetch failed
    201 |         return {
  > 202 |           address: portfolio.wallets[index].address,
        |                                             ^^^^^^^
    203 |           chain: portfolio.wallets[index].chain,
    204 |           balance: '0',
    205 |           error: 'Failed to fetch balance'

 ERROR(TypeScript)  Property 'chain' does not exist on type 'never'.
 FILE  /home/runner/DeFiAssetTracker/server/routes.ts:203:43

    201 |         return {
    202 |           address: portfolio.wallets[index].address,
  > 203 |           chain: portfolio.wallets[index].chain,
        |                                           ^^^^^
    204 |           balance: '0',
    205 |           error: 'Failed to fetch balance'
    206 |         };

[TypeScript] Found 13 errors. Watching for file changes.
03:34:44 AM [express] GET /api/user 401 in 2ms